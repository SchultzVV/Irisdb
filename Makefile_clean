# =====================================
# 🌸 Iris MLOps Pipeline - Makefile Essencial
# =====================================
-include .env
export

# =====================================
# 🛠️ Configuração
# =====================================
DATABRICKS_BIN := databricks

# =====================================
# 🔧 Setup e Autenticação
# =====================================

# 🛠️ Instala Databricks CLI v0.205+
install-databricks:
	@echo "🚀 Instalando Databricks CLI oficial..."
	@curl -fsSL https://raw.githubusercontent.com/databricks/setup-cli/main/install.sh | sh
	@echo "✅ Databricks CLI instalada!"
	@databricks version

# 🔐 Teste de autenticação
test-auth:
	@echo "🔐 Testando autenticação..."
	@set -a && . ./.env && set +a && \
	databricks current-user me

# =====================================
# 📦 Deploy e Validação
# =====================================

# ✅ Validar bundle
validate:
	@echo "🔍 Validando bundle..."
	@set -a && . ./.env && set +a && \
	$(DATABRICKS_BIN) bundle validate

# 🚀 Deploy do bundle
deploy:
	@echo "🚀 Fazendo deploy..."
	@set -a && . ./.env && set +a && \
	$(DATABRICKS_BIN) bundle deploy --target dev

# =====================================
# 🎯 Jobs Essenciais
# =====================================

# 🥉 Bronze job (Ingestão)
run_bronze:
	@echo "🥉 Executando Bronze job..."
	@set -a && . ./.env && set +a && \
	databricks bundle run bronze_job

# 🥈 Silver job (Transformação)
run_silver:
	@echo "🥈 Executando Silver job..."
	@set -a && . ./.env && set +a && \
	databricks bundle run silver_job

# 🥇 Gold job (Agregação)
run_gold:
	@echo "🥇 Executando Gold job..."
	@set -a && . ./.env && set +a && \
	databricks bundle run gold_job

# 🤖 Training job (ML)
run_training:
	@echo "🤖 Executando Training job..."
	@set -a && . ./.env && set +a && \
	databricks bundle run training_job

# 📊 Monitoring job
run_monitoring:
	@echo "📊 Executando Monitoring job..."
	@set -a && . ./.env && set +a && \
	databricks bundle run model_monitoring

# 🚀 Pipeline completo orquestrado
run_complete_pipeline:
	@echo "🚀 Executando pipeline completo..."
	@set -a && . ./.env && set +a && \
	databricks bundle run complete_pipeline

# =====================================
# 🔄 Auto-Triggered Pipelines
# =====================================

# Bronze com auto-triggers (recomendado)
run_bronze_with_triggers:
	@echo "🌟 Iniciando Bronze com auto-triggers..."
	@$(MAKE) run_bronze && echo "✅ Bronze concluído, triggering Silver..." && \
	$(MAKE) run_silver_with_triggers

# Silver com auto-triggers
run_silver_with_triggers:
	@echo "🌟 Iniciando Silver com auto-triggers..."
	@$(MAKE) run_silver && echo "✅ Silver concluído, triggering Gold e Training..." && \
	($(MAKE) run_gold &) && \
	$(MAKE) run_training_with_triggers

# Training com auto-triggers
run_training_with_triggers:
	@echo "🌟 Iniciando Training com auto-triggers..."
	@$(MAKE) run_training && echo "✅ Training concluído, triggering Monitoring..." && \
	$(MAKE) run_monitoring

# Pipeline completo com triggers
run_full_pipeline_triggered:
	@echo "🚀 Pipeline COMPLETO com auto-triggers..."
	@echo "Fluxo: Bronze → Silver → [Gold + Training] → Monitoring"
	@$(MAKE) run_bronze_with_triggers

# =====================================
# 🔍 Monitoramento e Status
# =====================================

# Listar jobs
list_jobs:
	@echo "📋 Listando jobs do bundle..."
	@set -a && . ./.env && set +a && \
	databricks jobs list

# Verificar status dos jobs essenciais
check_essential_status:
	@echo "🔍 Verificando status dos jobs essenciais..."
	@set -a && . ./.env && set +a && \
	databricks jobs list --output json | jq '.jobs[] | select(.settings.name | contains("iris_")) | {name: .settings.name, job_id: .job_id}'

# Verificar tabelas Unity Catalog
check_tables:
	@echo "📋 Verificando tabelas Unity Catalog..."
	@set -a && . ./.env && set +a && \
	databricks unity-catalog list-tables workspace.default 2>/dev/null || echo "Usando SQL direto..." && \
	databricks sql execute "SHOW TABLES IN workspace.default"

# =====================================
# 🧹 Limpeza e Utilitários
# =====================================

# Limpeza de arquivos temporários
clean:
	@echo "🧹 Limpando arquivos temporários..."
	rm -rf __pycache__ dist *.egg-info .pytest_cache .mypy_cache .coverage

# =====================================
# 💡 Ajuda
# =====================================

help:
	@echo "🌸 Iris MLOps Pipeline - Comandos Disponíveis"
	@echo ""
	@echo "🔧 Setup:"
	@echo "  make install-databricks    -> Instalar Databricks CLI"
	@echo "  make test-auth            -> Testar autenticação"
	@echo ""
	@echo "📦 Deploy:"
	@echo "  make validate             -> Validar configuração"
	@echo "  make deploy               -> Deploy do bundle"
	@echo ""
	@echo "🎯 Jobs Individuais:"
	@echo "  make run_bronze           -> Job Bronze (ingestão)"
	@echo "  make run_silver           -> Job Silver (transformação)"
	@echo "  make run_gold            -> Job Gold (agregação)"
	@echo "  make run_training        -> Job Training (ML)"
	@echo "  make run_monitoring      -> Job Monitoring"
	@echo "  make run_complete_pipeline -> Pipeline orquestrado"
	@echo ""
	@echo "🔄 Pipelines com Auto-triggers:"
	@echo "  make run_bronze_with_triggers     -> Bronze → Silver → [Gold + Training] → Monitoring"
	@echo "  make run_full_pipeline_triggered  -> Pipeline completo com auto-triggers"
	@echo ""
	@echo "🔍 Monitoramento:"
	@echo "  make list_jobs               -> Listar jobs"
	@echo "  make check_essential_status  -> Status dos jobs"
	@echo "  make check_tables           -> Verificar tabelas"
	@echo ""
	@echo "🌟 Comando Recomendado:"
	@echo "  make run_bronze_with_triggers  # Executa todo o pipeline automaticamente"

.PHONY: help install-databricks test-auth validate deploy run_bronze run_silver run_gold run_training run_monitoring run_complete_pipeline run_bronze_with_triggers run_silver_with_triggers run_training_with_triggers run_full_pipeline_triggered list_jobs check_essential_status check_tables clean

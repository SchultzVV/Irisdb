resources:
  jobs:
    iris_workflow:
      name: iris_complete_workflow
      schedule:
        quartz_cron_expression: "0 45 11 * * ?"  # Todo dia às 11:40 AM
        timezone_id: "America/Sao_Paulo"
        pause_status: "PAUSED"
      tasks:
        # Step 1: Bronze
        - task_key: bronze_ingestion
          description: "Ingestão de dados Bronze"
          notebook_task:
            notebook_path: /Workspace/Users/xultezz@gmail.com/.bundle/iris_bundle/dev/files/notebooks/01_ingest_bronze
            base_parameters:
              source: ${var.source}
              output_bronze_table: ${var.output_bronze_table}

        # Step 2: Silver (depende do Bronze)
        - task_key: silver_transform
          depends_on:
            - task_key: bronze_ingestion
          description: "Transformação Silver"
          notebook_task:
            notebook_path: /Workspace/Users/xultezz@gmail.com/.bundle/iris_bundle/dev/files/notebooks/02_transform_silver
            base_parameters:
              input_bronze_table: ${var.output_bronze_table}
              output_silver_table: ${var.output_silver_table}

        # Step 3: Gold (depende do Silver) Esse step foi criado pra criar uma dependência explícita
        # com a possibilidade de popular a feature store antes de treinar o modelo
        - task_key: gold_aggregate
          depends_on:
            - task_key: silver_transform
          description: "Agregação Gold"
          notebook_task:
            notebook_path: /Workspace/Users/xultezz@gmail.com/.bundle/iris_bundle/dev/files/notebooks/03_aggregate_gold
            base_parameters:
              input_silver_table: ${var.output_silver_table}
              output_gold_table: ${var.output_gold_table}

        # Step 4: Training (depende do Gold)
        - task_key: model_training
          depends_on:
            - task_key: gold_aggregate
          description: "Treinamento do modelo"
          notebook_task:
            notebook_path: /Workspace/Users/xultezz@gmail.com/.bundle/iris_bundle/dev/files/notebooks/04_train_model
            base_parameters:
              input_gold_table: ${var.output_silver_table}  # PERCEBA que estamos usando o silver aqui
              output_model: ${var.output_model}
